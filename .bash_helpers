# vi:syntax=sh

xmr() {
    xmonad --recompile && xmonad --restart
}

xmonadwatcher() {
    while true
        do
            change=$(inotifywait -e close_write,moved_to,create ~/.xmonad/)
            change=${change#/* * }
            if [ "$change" = "xmonad.hs" ] || [ "$change" = "xmobar.hs" ] ; then xmr ; fi
        done
}

myclip() {
    read a
    echo "$a"|xclip -selection clipboard
}

extract_all_images() {
    [ ! -z $1 ] && [ -d "$1" ] && d="$@" || d="."

    images="high-appl high-bolo high-rsu rse-appl rse-bolo rse-rsu"

    for im in $images
    do
        mkdir -p ${d}/${im}
        echo find ${d} -type l -name mgu-\*${im}-\*.tar.gz -exec tar xzf {} -C ${d}/${im} \;
        find ${d} -name mgu-\*${im}-\*.tar.gz -exec tar xzf {} -C ${d}/${im} \;
        echo "."
    done
}

link_to_temp() {
    [ ! -z $1 ] && [ "$1" = "h" ] && echo "link_to_temp <source_dir> <optional_prefix>"
    [ ! -z $1 ] && [ -d "$1" ] && d="$1" || d="."
    [ ! -z $2 ] && prefix=$2 || prefix=""
    images="appl bolo rsu"
    for im in $images
    do
        dst=/tmp/${prefix}${im}
        [ -h $dst ] && rm $dst
        ln -rs ${d}/${im} ${dst}
    done
}

fbasenames() {
    [ ! -z $1 ] && [ -d $1 ] && d="$1" || d="."
    find ${d} -printf "%f\n"|sort
}

print_color_palette()
{
    for i in {0..255}
    do
        printf "\x1b[38;5;${i}mcolor${i}\n"
    done
}

stopwatch(){
    # stopwatch counter. Copied as it is from: http://goo.gl/0V3Zlc
    date1=`date +%s`;
    while true
    do
        echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
        sleep 0.1
    done
}

bbshell() {
    curd=$(pwd)
    cd /opt/src/base
    ./bci-build-scripts/build.sh --bitbake-shell
    cd ${curd}
}

to()
{
    local wdirs=~/.workdirs
    # no args. do nothing and quit silently
    [ $# -lt 1 ] && return 1
    dst=$1

    if [[ $dst == "register" ]] || [[ $dst == store ]] ;
    then
        name=$2
        if [ -z $2 ] ; then
            name=$(basename $(pwd))
        fi

        replace=0
        egrep -q "^${name}" ~/.workdirs && replace=1
        if [ $replace -eq 1 ]; then
            echo "Updating alias $name to $(pwd)"
            sed -i "s#$name.*#$name $(pwd)#" $wdirs

        else
            echo "Registering $(pwd) with alias $name"
            echo "$name $(pwd)" >> $wdirs
        fi

        sort $wdirs -o $wdirs
        return
    fi

    # is there a conf file?
    [[ ! -f $wdirs ]] && return 2

    # if there's a directory in the current directory with the same name as our alias
    # auto completion adds a trailing / thus failing the grep below. Strip it.
    dst=${dst%/}
    # make sure the destination exists in our rc
    egrep -q "^$dst" $wdirs || return 4

    # we need a dictionary with the necessary paths
    declare -A workdirs
    while read a ;
    do
        IFS=" " read -a pair <<< $a
        workdirs[${pair[0]}]=${pair[1]}
    done < $wdirs

    pushd ${workdirs[$dst]}
}


